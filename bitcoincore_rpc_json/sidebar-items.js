initSidebarItems({"enum":[["AddressType","Used to represent an address type."],["Bip125Replaceable","Enum to represent the BIP125 replaceable status for a transaction."],["Bip9SoftforkStatus",""],["EstimateMode",""],["GetAddressInfoResultLabel",""],["GetAddressInfoResultLabelPurpose",""],["GetPeerInfoResultConnectionType",""],["GetPeerInfoResultNetwork",""],["GetTransactionResultDetailCategory","Enum to represent the category of a transaction."],["ImportMultiRequestScriptPubkey",""],["ImportMultiRescanSince",""],["PubKeyOrAddress","Used to represent arguments that can either be an address or a public key."],["ScanTxOutRequest","Start a scan of the UTXO set for an output descriptor."],["ScanningDetails",""],["ScriptPubkeyType",""],["SoftforkType",""]],"externcrate":[["bitcoin",""]],"mod":[["serde_hex","A module used for serde serialization of bytes in hexadecimal format."]],"struct":[["AddMultiSigAddressResult",""],["Bip9SoftforkInfo",""],["Bip9SoftforkStatistics",""],["BlockRef","Models the result of “waitfornewblock”, and “waitforblock”"],["CreateRawTransactionInput",""],["EstimateSmartFeeResult","Models the result of “estimatesmartfee”"],["FinalizePsbtResult","Models the result of “finalizepsbt”"],["FundRawTransactionOptions",""],["FundRawTransactionResult",""],["GetAddressInfoResult",""],["GetAddressInfoResultEmbedded",""],["GetBalancesResult",""],["GetBalancesResultEntry",""],["GetBlockFilterResult",""],["GetBlockHeaderResult",""],["GetBlockResult",""],["GetBlockchainInfoResult","Models the result of “getblockchaininfo”"],["GetDescriptorInfoResult","Models the result of “getdescriptorinfo”"],["GetMempoolEntryResult",""],["GetMempoolEntryResultFees",""],["GetMiningInfoResult",""],["GetNetTotalsResult",""],["GetNetTotalsResultUploadTarget",""],["GetNetworkInfoResult",""],["GetNetworkInfoResultAddress",""],["GetNetworkInfoResultNetwork",""],["GetPeerInfoResult","Models the result of “getpeerinfo”"],["GetRawTransactionResult",""],["GetRawTransactionResultVin",""],["GetRawTransactionResultVinScriptSig",""],["GetRawTransactionResultVout",""],["GetRawTransactionResultVoutScriptPubKey",""],["GetTransactionResult",""],["GetTransactionResultDetail",""],["GetTxOutResult",""],["GetTxOutSetInfoResult",""],["GetWalletInfoResult",""],["ImportMultiOptions",""],["ImportMultiRequest","A import request for importmulti."],["ImportMultiResult",""],["ImportMultiResultError",""],["ListReceivedByAddressResult",""],["ListSinceBlockResult",""],["ListTransactionResult",""],["ListUnspentQueryOptions",""],["ListUnspentResultEntry",""],["LoadWalletResult",""],["RejectStatus","Progress toward rejecting pre-softfork blocks"],["ScanTxOutResult",""],["SigHashType","A wrapper around bitcoin::SigHashType that will be serialized according to what the RPC expects."],["SignRawTransactionInput",""],["SignRawTransactionResult",""],["SignRawTransactionResultError",""],["Softfork","Status of a softfork"],["TestMempoolAcceptResult",""],["TestMempoolAcceptResultFees",""],["Utxo",""],["WalletCreateFundedPsbtOptions","Models the request for “walletcreatefundedpsbt”"],["WalletCreateFundedPsbtResult","Models the result of “walletcreatefundedpsbt”"],["WalletProcessPsbtResult","Models the result of “walletprocesspsbt”"],["WalletTxInfo",""]]});